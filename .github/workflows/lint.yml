name: Lint and Test

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Setup ROS using an action that has built-in caching
      - name: Setup ROS 2 Kilted
        uses: ros-tooling/setup-ros@v0.7
        with:
          distro: kilted
          # This action automatically caches the main ROS installation

      # Cache the pip venv directory
      - name: Cache pip venv
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: venv
          # Create a unique key based on the requirements.txt file
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies
      - name: Install dependencies
        run: |
          # Source ROS to make rosdep available
          source /opt/ros/kilted/setup.bash

          # Initialize rosdep (apt-get install python3-rosdep was handled by setup-ros)
          sudo rosdep init || true  # Allow failure if already initialized
          rosdep update

          # Use rosdep to install *only* the ROS dependencies (like ackermann-msgs)
          # This is very fast.
          rosdep install --from-paths src --ignore-src -r -y

          # Create venv and install pip packages
          # pip will use the cache if requirements.txt hasn't changed
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Run lint checks
      - name: Run lint and format checks with Ruff
        run: |
          source /opt/ros/kilted/setup.bash
          source venv/bin/activate
          ruff check src --fix

      # Run tests
      - name: Run tests
        run: |
          source /opt/ros/kilted/setup.bash
          source venv/bin/activate
          pytest
